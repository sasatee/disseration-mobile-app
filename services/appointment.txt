import { BASE_URL } from '@env';
import ReactNativeAsyncStorage from "@react-native-async-storage/async-storage";
import axios from 'axios';

const baseURL = BASE_URL.toString();


const axiosInstance = axios.create({
  baseURL,
});

const getHeaders = async () => {
  let headers = {};

  const token = await ReactNativeAsyncStorage.getItem('jwtToken');
  const googleAccessToken = await ReactNativeAsyncStorage.getItem('googleAccessToken');

 if(token) {
    headers.Authorization = `Bearer ${token}`;
  } else if (googleAccessToken) {
    headers.Authorization = `Bearer ${googleAccessToken}`;
  } else {
    console.error('No token available');
  }

  return headers;
};

export const getAppointments = async () => {
  try {
    const headers = await getHeaders();
    const response = await axiosInstance.get('api/v1/appointment', { headers });
    return response.data;
  } catch (error) {
    throw error;
  }
};

export const getAppointmentById = async (id) => {
  try {
    const headers = await getHeaders();
    const response = await axiosInstance.get(`api/v1/appointment/${id}`, { headers });
    return response.data;
  } catch (error) {
    throw error;
  }
};

export const createNewAppointment = async (data) => {
  try {
    const headers = await getHeaders();
    const response = await axiosInstance.post('api/v1/appointment', data, { headers });
    return response.data;
  } catch (error) {
    throw error;
  }
};

export const deleteAppointmentById = async (id) => {
  try {
    const headers = await getHeaders();
    const response = await axiosInstance.delete(`api/v1/appointment/${id}`, { headers });
    return response.data;
  } catch (error) {
    throw error;
  }
};
